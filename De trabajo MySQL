SET TRANSACTION ISOLATION LEVEL READ COMMITTED;
SELECT 
id,
TipReg,
#NroLote,
#ReservadoCASA,
#NroBoleta,
CodTransac,
#NroBancoSucMov,
ReservadoCASA2,
#NroCupon,
#CodMont,
ImpCotiz,
ImpTotalVta,
ImpTotalOrig,
ImpSdes,
ImpTotal,
#Origen,
#FePres,
#FeProc,
#Flicom,
#Fliqusu,
#FePago,
#FeVenc,
NroComp,
Plazop,
PorDto,
CodRubro,
PorAlicuotaIVA,
CodProductoCom,
ImpFijoAsocVta,
NroBcoSucRuc,
NroRuc,
NroTar,
Grupo,
ImpIvaUsu,
CodPtoCuota,
NroAut,
#CodMonOrigen,
#ReservadoCASA3,
#CodZogeoOrig,
#CodZeogeoDest,
CodDebaut,
TipVta,
Mot_Contrap,
#Forinen_Postnet,
Cuota,
Mar_Financiable,
Mar_ExcLimComp,
MarRetiva,
#MarCuoAnti,
#ReservadoUsoCASA4,
PorTasIntPagAde,
ImpIntPagAde,
PorTasIntEmiAde,
PorAraAde,
PorTasSelAde,
DenMov,
DenMovAdl,
EstProc,
ReservadoUsoCASA5,
CanCuotasPlan,
#ReservadoUsoCASA6,
TasaIntercambio,
#RefUnivDE32,
#ComMC,
#DE22,
#Filler,
FClear,
imp_field,
verificador_broxel,
`Cta-Bancaria`,
#`Cta-Bancaria2`,
#`Comercio-Deb-Calle`,
#`Comercio-Nro_Puerta`,
#`Comercio-Localidad`,
#`Comercio-Cod-Post`,
#`Comercio-Zona`,
#`Comercio-Pais`,
#`Comercio-Den-Benef`,
#ImpTotalLiqusu,
importe_pesos,
#ICAAdq,
#Hora,
CodMC,
NOW() as 'Hora Validacion',
TIMESTAMPDIFF(MICROSECOND, NOW(), SYSDATE()) / 1000000 AS 'Tiempo de Respuesta Segundos'
FROM broxelco_rdg.ind_movimientos 
WHERE CodProductoCom IN ('S150','S152') 
AND Fclear >= '2023-03-01' #and Fclear <= '2023-02-28'
LIMIT 500000
;

  SELECT COUNT(*)
  FROM ind_movimientos
  WHERE FClear between '2022-12-01' and '2022-12-31'
  AND NroRuc like 'S15%'
  ;
  SELECT SUBSTRING(NroRuc,1,4) AS Tipo
  ,COUNT(*)
  FROM ind_movimientos
  WHERE FClear between '2022-12-01' and '2022-12-31'
  AND NroRuc like 'S15%'
  GROUP BY SUBSTRING(NroRuc,1,4)
  ;
  SELECT * FROM broxelco_rdg.ind_movimientos limit 100
  
  ;
  
  SELECT * FROM broxelco_rdg.CambioClabe
WHERE Comercio = '16ADM00025';

SELECT * FROM broxelco_rdg.maquila
WHERE CLABE = '012180001366688442'
;

SELECT * FROM broxelco_rdg.maquila
WHERE clave_cliente = '16ADM00025' OR ClaveClientePool = '16ADM00025';
;;
SELECT Mov.Id
		,Mov.NroRuc
		,Cat.Descripcion
        ,Mov.DenMov
        ,Mov.FClear
        ,Mov.NroAut
        ,Mov.ImpTotal
        ,Mov.NroTar
        ,Cat2.DenominacionTransaccion
        ,Cat2.DenTransacReverso
        ,Mov.CodTransac
        ,YEAR(Mov.FClear) AS Year
        ,MONTH(Mov.FClear) AS Month
        ,DATE(Mov.FClear) AS Fecha
        ,Mov.*
FROM broxelco_rdg.ind_movimientos Mov
LEFT JOIN broxelco_rdg.CatTipRegSofipo Cat
ON Mov.TipReg = Cat.TipoReg
LEFT JOIN broxelco_rdg.CatalogoTransacciones Cat2
ON Mov.CodTransac = Cat2.Codigo
LEFT JOIN broxelco_rdg.maquila Maq
ON Mov.NroRuc = Maq.num_cuenta
WHERE Maq.producto IN ('S150','S152')
AND YEAR(Fclear) = '2023'
AND Fclear >= '2023-01-01'
AND NroRuc = 'S150000335'
;

SELECT *
FROM broxelco_rdg.ind_movimientos MOV
LEFT JOIN  broxelco_rdg.CatTipRegSofipo CAT
WHERE CodProductoCom IN ('S150','S152') 
AND Fclear >= '2023-01-01' 
AND NroRuc = 'S150000335'
;

SELECT * FROM broxelco_rdg.CatTipRegSofipo;
;
SELECT Mov.Id
		,Mov.NroRuc
		,Cat.Descripcion
        ,Mov.DenMov
        ,Mov.FClear
        ,Mov.NroAut
        ,Mov.ImpTotal
        ,Mov.NroTar
        ,Mov.PtoCuota
        ,Cat2.DenominacionTransaccion
        ,Mov.DenTransacReverso
        ,Mov.CodTransac
FROM broxelco_rdg.ind_movimientos Mov
LEFT JOIN broxelco_rdg.CatTipRegSofipo Cat
ON Mov.TipReg = Cat.TipoReg
LEFT JOIN broxelco_rdg.CatalogoTransacciones Cat2
ON Mov.CodTransac = Cat2.Codigo
WHERE CodProductoCom IN ('S150','S152') 
AND YEAR(Fclear) = '2022'
AND Fclear >= '2022-12-01'

;

 SELECT  A.Producto
	,A.NumCuenta
        ,A.Importe * -1 as 'Ultimo Movimiento'
	,DATE(A.FechaMovimiento) as 'Fecha Movimiento'
        ,B.Id
        ,C.num_cuenta
FROM broxelco_rdg.ind_movimientos_sofipo A
inner JOIN (SELECT NumCuenta,DATE(MAX(FechaMovimiento)) as FechaOperacion,MAX(ID) as Id  FROM broxelco_rdg.ind_movimientos_sofipo where Producto = 'S150' and Importe < 0 and Estatus = 1  Group By NumCuenta) B on A.Id = B.Id
Inner Join  broxelco_rdg.maquila C on A.NumCuenta = C.num_cuenta where A.NumCuenta = 'S150000016' 
AND YEAR(A.FechaMovimiento) <= CASE WHEN MONTH(NOW()) = 1 THEN YEAR(NOW()) - 1 ELSE YEAR(NOW()) END
and MONTH(A.FechaMovimiento) <= CASE WHEN MONTH(NOW()) = 1 THEN 12 ELSE MONTH(NOW()) -1 END 
 Group by A.Producto,A.NumCuenta
 order by A.NumCuenta
 
 AND
YEAR(A.FechaMovimiento) = CASE WHEN MONTH(NOW()) = 1 THEN YEAR(NOW()) - 1 ELSE YEAR(NOW()) END
and MONTH(A.FechaMovimiento) = CASE WHEN MONTH(NOW()) = 1 THEN 12 ELSE MONTH(NOW()) -1 END 

;
/**SELECT * FROM broxelco_rdg.maquila where producto in ('N201','W100','W101','W102','W103','W104','W105')
where num_cuenta in (
'0074683013'
) or NombreCompleto like 'FRANCI%GODOY%I%'
Group by producto**/

    SELECT 
       LPAD(CONCAT(MONTH(B.FechaHoraEjecucion),'-',YEAR(B.FechaHoraEjecucion)),7,0)  as Periodo
	  ,A.ClaveClienteOrigen AS ClaveClienteO
	  ,A.CuentaOrigen
      ,C.nombre_titular AS NombreOrigen
	  ,A.ProductoOrigen
	  ,A.ClaveClienteDestino AS ClaveClienteD
	  ,A.CuentaDestino
      ,D.nombre_titular AS NombreDestino
	  ,A.ProductoDestino
      ,A.Monto AS Monto
      ,A.MontoComision
      ,B.FechaHoraEjecucion
	  ,B.ClaveCliente
	  ,B.Origen AS Medio
      ,B.Tipo
      ,A.SaldoOrigenAntes
      ,A.SaldoOrigenDespues
      ,A.SaldoDestinoAntes
      ,A.SaldoDestinoDespues
      ,B.Estado
      ,B.MontoTotal
  FROM broxelco_rdg.TransferenciasDetalle A
  INNER JOIN broxelco_rdg.TransferenciasSolicitud B on B.Folio = A.FolioSolicitud
  INNER JOIN broxelco_rdg.maquila C on A.CuentaOrigen = C.num_cuenta
  INNER JOIN broxelco_rdg.maquila D on A.CuentaDestino = D.num_cuenta
  where B.Producto in ('W100','W101','W102','W103','W104','W105') and C.nombre_titular like '%FRANCIS%GODO%I%'
  and CodigoRespuesta = '-1' and ProductoOrigen like '%W%'
  Order by B.FechaHoraEjecucion, A.IdMovimiento
  LIMIT 1000000
  ;
  SELECT  * FROM broxelco_rdg.TransferenciasDetalle where CuentaOrigen = '0074683013'
  and CodigoRespuesta = '-1'
  LIMIT 500
  ;
  SELECT * FROM broxelco_rdg.TransferenciasSolicitud where ClaveCliente = '2110MYO000037'
  and Producto like '%W%'
  Order by folio desc
  LIMIT 500
  ;
  SELECT * FROM INFORMATION_SCHEMA.tables WHERE TABLE_SCHEMA='broxelco_rdg'  AND
 table_name like '%comi%'
; 

SELECT
ind_movimientos.FClear   AS Fecha,
ind_movimientos.CodPtoCuota 		 AS Producto,
cc.Cliente	  AS Clave_Cliente,
COUNT(1) 	  AS Operaciones,
COUNT(DISTINCT(ind_movimientos.NroRuc))	  AS Cuentas,
SUM(case when isnull(importe_pesos,0)<>0 then importe_pesos else ImpTotal end) AS ImportePesos,
sum (case when CodMont!='484' then (TasaIntercambio*(importe_pesos/ImpTotal)) else TasaIntercambio end) AS MontoIntercambio,
CatalogoClasificacionClientes.Clasificacion   AS ClasificacionCliente,
case when Comercio.idComercio is not null then CatalogoCategoriaComercio.Categoria else CatalogoTipoTransaccion.CategoriaTransaccion end AS TipoMovimiento,
Cat_Procesador.Nombre	 AS Procesador
FROM  
broxelco_rdg.ind_movimientos        
LEFT JOIN recursos.CatalogoCuentas cc    ON cc.Cuenta = ind_movimientos.NroRuc
LEFT JOIN broxelco_rdg.clientesBroxel  ON clientesBroxel.ClaveCliente = cc.Cliente
LEFT JOIN broxelco_rdg.CatalogoClasificacionClientes  ON CatalogoClasificacionClientes.Codigo = clientesBroxel.ClasificacionCtesBroxel
LEFT JOIN broxelco_rdg.CatalogoTipoTransaccion        ON CatalogoTipoTransaccion.CodigoTransaccional = ind_movimientos.CodTransac
LEFT JOIN broxelco_rdg.Comercio  ON Comercio.Comercio = ind_movimientos.DenMov
LEFT JOIN broxelco_rdg.CatalogoCategoriaComercio       ON CatalogoCategoriaComercio.id=Comercio.Categoria
LEFT JOIN dbo.Cat_Procesador  ON Procesador = Cat_Procesador.Nombre
WHERE FClear>='2021-01-01' and FClear<= '2021-01-31'
GROUP BY cc.Cliente, CodPtoCuota, FClear,case when Comercio.idComercio is not null then CatalogoCategoriaComercio.Categoria else CatalogoTipoTransaccion.CategoriaTransaccion end ,Clasificacion,
case when Comercio.idComercio is not null then CatalogoCategoriaComercio.Categoria else CatalogoTipoTransaccion.CategoriaTransaccion end,Cat_Procesador.Nombre

;
SELECT  * FROM broxelco_rdg.gruposComercios
where claveClienteBroxel = '16BCA001229'
;
SELECT A.* FROM 
broxelco_rdg.gruposComercios A
WHERE claveClienteBroxel = '16BCA001229'
;

select IIF(nombreGrupo IS not NULL , nombreGrupo , b.razon_social ) nombregrupo,
IIF(claveClienteBroxel IS not NULL , claveClienteBroxel , b.Comercio ) Clave,
count(Comercio) Sucursales, convert(date,min(FechaHoraCreacion)) FechaRegistro
into ##Totalcomercios  From broxelco_rdg.Comercio  b  with(nolock)
left join broxelco_rdg.gruposComercios a with(nolock) on b.Matriz = a.idGrupo
group by IIF(nombreGrupo IS not NULL , nombreGrupo , b.razon_social ), IIF(claveClienteBroxel IS not NULL , claveClienteBroxel , b.Comercio )
order by nombreGrupo



SELECT SUBSTRING(NroRuc,1,4),COUNT(*) FROM broxelco_rdg.ind_movimientos
WHERE NroRuc like ('S15%')    /**'S150000218'**/
ANd YEAR(Fclear) = '2022' AND MONTH(Fclear) = '1'
GROUP BY SUBSTRING(NroRuc,1,4)

SELECT  * FROM broxelco_rdg.ind_movimientos 
WHERE YEAR(Fclear) = '2023' AND MONTH(Fclear) = '01'
ORDER BY FClear
LIMIT 10000

SELECT SUBSTRING(NroRuc,1,4) AS Bovedas
		,COUNT(*) AS Reg
        ,SUM(CASE WHEN ImpTotal < 0 THEN ImpTotal * - 1 ELSE ImpTotal * - 1 END) AS Importe
FROM broxelco_rdg.ind_movimientos
WHERE MONTH(Fclear) IN ('1','2')
		AND YEAR(Fclear) = '2023' 
		AND SUBSTRING(NroRuc,1,4)  Like 'S15%'
GROUP BY SUBSTRING(NroRuc,1,4)
ORDER BY SUBSTRING(NroRuc,1,4) DESC

SELECT SUBSTRING(NroRuc,1,4) AS Bovedas
		,COUNT(*) AS Reg
        ,SUM(CASE WHEN ImpTotal < 0 THEN ImpTotal * - 1 ELSE ImpTotal * - 1 END) AS Importe
FROM broxelco_rdg.ind_movimientos
WHERE MONTH(Fclear) IN ('1','2')
		AND YEAR(Fclear) = '2023' 
        AND NroRuc  = 'S150000335'
		AND SUBSTRING(NroRuc,1,4)  Like 'S15%'
GROUP BY SUBSTRING(NroRuc,1,4)
ORDER BY SUBSTRING(NroRuc,1,4) DESC

SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
SELECT CodProductoCom,COUNT(1)
FROM broxelco_rdg.ind_movimientos 
WHERE CodProductoCom IN ('S150','S152') 
AND YEAR(Fclear) = '2023' 
GROUP BY CodProductoCom

SELECT *
FROM information_schema.columns
WHERE column_name LIKE '%Tip%Reg%'

AND NroRuc = 'S150000335'

SHOW INDEX FROM broxelco_rdg.ind_movimientos;
SHOW INDEXES FROM broxelco_rdg.ind_movimientos;


SET TRANSACTION ISOLATION LEVEL READ COMMITTED;
SELECT 
id,
TipReg,
#NroLote,
#ReservadoCASA,
NroBoleta,
CodTransac,
NroBancoSucMov,
ReservadoCASA2,
NroCupon,
CodMont,
ImpCotiz,
ImpTotalVta,
ImpTotalOrig,
ImpSdes,
ImpTotal,
Origen,
FePres,
FeProc,
Flicom,
Fliqusu,
FePago,
FeVenc,
NroComp,
Plazop,
PorDto,
CodRubro,
PorAlicuotaIVA,
CodProductoCom,
ImpFijoAsocVta,
NroBcoSucRuc,
NroRuc,
NroTar,
Grupo,
ImpIvaUsu,
CodPtoCuota,
NroAut,
CodMonOrigen,
ReservadoCASA3,
CodZogeoOrig,
CodZeogeoDest,
CodDebaut,
TipVta,
Mot_Contrap,
Forinen_Postnet,
Cuota,
Mar_Financiable,
Mar_ExcLimComp,
MarRetiva,
MarCuoAnti,
ReservadoUsoCASA4,
PorTasIntPagAde,
ImpIntPagAde,
PorTasIntEmiAde,
PorAraAde,
PorTasSelAde,
DenMov,
DenMovAdl,
EstProc,
ReservadoUsoCASA5,
CanCuotasPlan,
ReservadoUsoCASA6,
TasaIntercambio,
RefUnivDE32,
ComMC,
DE22,
Filler,
FClear,
imp_field,
verificador_broxel,
`Cta-Bancaria`,
`Cta-Bancaria2`,
`Comercio-Deb-Calle`,
`Comercio-Nro_Puerta`,
`Comercio-Localidad`,
`Comercio-Cod-Post`,
`Comercio-Zona`,
`Comercio-Pais`,
`Comercio-Den-Benef`,
ImpTotalLiqusu,
importe_pesos,
ICAAdq,
Hora,
CodMC,
NOW() as 'Hora Validacion',
  TIMESTAMPDIFF(MICROSECOND, NOW(), SYSDATE()) AS 'Tiempo de Respuesta (microsegundos)'
FROM broxelco_rdg.ind_movimientos 
WHERE CodProductoCom IN ('S150','S152') 
AND Fclear >= '2023-03-01'
LIMIT 20000
;

SHOW columns FROM broxelco_rdg.ind_movimientos
;

CREATE INDEX idx_ind_movimientos_fclear_codproductocom ON broxelco_rdg.ind_movimientos (Fclear, CodProductoCom);
SET TRANSACTION ISOLATION LEVEL READ COMMITTED;
SELECT 
id,
TipReg,
#NroLote,
#ReservadoCASA,
#NroBoleta,
CodTransac,
NroBancoSucMov,
ReservadoCASA2,
#NroCupon,
CodMont,
ImpCotiz,
ImpTotalVta,
ImpTotalOrig,
ImpSdes,
ImpTotal,
Origen,
FePres,
FeProc,
Flicom,
Fliqusu,
FePago,
FeVenc,
NroComp,
Plazop,
PorDto,
CodRubro,
PorAlicuotaIVA,
CodProductoCom,
ImpFijoAsocVta,
NroBcoSucRuc,
NroRuc,
NroTar,
Grupo,
ImpIvaUsu,
CodPtoCuota,
NroAut,
CodMonOrigen,
ReservadoCASA3,
CodZogeoOrig,
CodZeogeoDest,
CodDebaut,
TipVta,
Mot_Contrap,
Forinen_Postnet,
Cuota,
Mar_Financiable,
Mar_ExcLimComp,
MarRetiva,
MarCuoAnti,
ReservadoUsoCASA4,
PorTasIntPagAde,
ImpIntPagAde,
PorTasIntEmiAde,
PorAraAde,
PorTasSelAde,
DenMov,
DenMovAdl,
EstProc,
ReservadoUsoCASA5,
CanCuotasPlan,
ReservadoUsoCASA6,
TasaIntercambio,
RefUnivDE32,
ComMC,
DE22,
Filler,
FClear,
imp_field,
verificador_broxel,
`Cta-Bancaria`,
`Cta-Bancaria2`,
`Comercio-Deb-Calle`,
`Comercio-Nro_Puerta`,
`Comercio-Localidad`,
`Comercio-Cod-Post`,
`Comercio-Zona`,
`Comercio-Pais`,
`Comercio-Den-Benef`,
ImpTotalLiqusu,
importe_pesos,
ICAAdq,
#Hora,
CodMC,
NOW() as 'Hora Validacion',
TIMESTAMPDIFF(MICROSECOND, NOW(), SYSDATE()) / 1000000 AS 'Tiempo de Respuesta Segundos'
FROM broxelco_rdg.ind_movimientos 
WHERE CodProductoCom IN ('S150','S152') 
AND Fclear >= '2023-02-01' and Fclear <= '2023-02-28'
LIMIT 100000


